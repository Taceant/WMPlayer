/*!
* WMPlayer v0.6.4
* Copyright 2016-2017 Marcin Walczak
*This file is part of WMPlayer which is released under MIT license.
*See LICENSE for full license details.
*/
if(window.jQuery) $.fn.WMPlayer=function(options){ var args=$.makeArray(arguments),after=args.slice(1);return this.each(function(){ var instance=$.data(this,'wmplayer');if(instance){if(instance[options]){instance[options].apply(instance,after); if(options=='parent'){if(options.length>0){var parent=after[0];if(parent.length>0) parent=parent[0];$.removeData(this,'wmplayer');if($.data(parent,'wmplayer')!==undefined) $.data(parent,'wmplayer').destroy();$.data(parent,'wmplayer',instance);}}} else{$.error('Method '+options+' does not exist on WMPlayer');}} else if(typeof options!=='string'){ var config=options;if(config===undefined) config={parent:this};else if(config.parent===undefined) config.parent=this;var wmp=new WMPlayer(config); $.data(this,'wmplayer',wmp);return wmp;}});};function WMPlayer($config){var self=this;var mouseDown=-1;this.currentScript=document.currentScript||(function(){var scripts=document.getElementsByTagName('script');return scripts[scripts.length-1];})();this.parentNode=(this.currentScript[this.currentScript.length-1]||this.currentScript).parentNode; this.container=document.createElement('div');if(this.container.classList!==undefined) this.container.classList.add('wmplayer');else this.container.className+=' wmplayer'; this.started=false;this.model=new WMPlayerModel();this.view=new WMPlayerView({playlist:'wmp-playlist',playButton:'wmp-play',stopButton:'wmp-stop',fastForwardButton:'wmp-fast-forward',rewindButton:'wmp-rewind',progressBar:'wmp-progress-bar',volumeBar:'wmp-volume-bar',muteButton:'wmp-mute',currentTrackTime:'wmp-current-track-time',currentTrackDuration:'wmp-current-track-duration',currentTrackTitle:'wmp-current-track-title',container:this.container});this.view.setTemplate('<div class="wmp-panel"><div class="wmp-current-track"><span class="wmp-current-track-title"></span><span class="wmp-timer"><span class="wmp-current-track-time">0:00</span><span class="wmp-current-track-duration">N/A</span></span></div><div class="wmp-controls"><div class="wmp-play wmp-button"><svg class="wmp-button-play" width="18" height="18"><polygon class="wmp-symbol-play" points="2,2 16,9 2,16"/><g class="wmp-symbol-pause"><rect x="2" y="2" width="4" height="14" /><rect x="11" y="2" width="4" height="14" /><rect x="2" y="2" width="14" height="14" fill="transparent" stroke="transparent"/></g></svg></div><div class="wmp-stop wmp-button"><svg class="wmp-button-stop" width="18" height="18"><rect class="wmp-symbol-stop" x="2" y="2" width="14" height="14"/></svg></div><div class="wmp-rewind wmp-button"><svg class="wmp-button-rewind" width="18" height="18"><polygon class="wmp-symbol-rewind" points="2,9 9,2 9,9 16,2 16,16 9,9 9,16"/></svg></div><div class="wmp-fast-forward wmp-button"><svg class="wmp-button-fast-forward" width="18" height="18"><polygon class="wmp-symbol-fast-forward" points="2,2 9,9 9,2 16,9 9,16 9,8 2,16"/></svg></div></div><div class="wmp-volume-bar-container"><div class="wmp-button wmp-mute"><svg width="18" height="18"><g class="wmp-button-volume"><polygon points="2,6 5,6 10,2 10,16 5,12 2,12 " /><g class="wmp-symbol-muted"><path d="M12,4 Q18,9 12,14" fill="transparent" /><path d="M12,7 Q14,9 12,11" fill="transparent" /></g></g></svg></div><div class="wmp-volume-bar"></div></div><div class="wmp-progress-bar-container"><div class="wmp-progress-bar"></div></div></div><div class="wmp-playlist-container"><div class="wmp-playlist"></div></div>');this.view.setPlaylistPattern('<div class="$status"><span>$index.</span><span>$title</span><span>$duration</span></div>'); if($config!==undefined){ if(($config.nodeType!==undefined&&$config.nodeType===1)||$config instanceof jQuery) this.parent($config);else{if($config.parent!==undefined)this.parent($config.parent,$config.parentAsTemplate);if($config.template!==undefined)this.template($config.template);if($config.playlistPattern!==undefined)this.playlistPattern($config.playlistPattern);if($config.controls!==undefined)this.controls($config.controls);if($config.autoplay!==undefined)this.autoplay($config.autoplay);if($config.loop!==undefined)this.loop($config.loop);if($config.volume!==undefined)this.volume($config.volume);if($config.mute!==undefined)this.mute($config.mute);if($config.playlist!==undefined){$config.playlist.forEach(function($audioTrack){self.addTrack($audioTrack.url,$audioTrack.title);});};if($config.showPlaylist!==undefined)this.showPlaylist($config.showPlaylist);if($config.start===true)this.start();}}  this.model.audioTrackAdded.attach(function(){if(self.started){var playlist=self.model.getPlaylist();var currentTrackIndex=self.model.getCurrentTrackIndex();var currentTrackTitle=self.model.getCurrentTrackTitle();var currentTrackDuration=self.model.getCurrentTrackDuration();self.view.renderPlaylist(playlist,currentTrackIndex);self.view.setCurrentTrackData(currentTrackTitle,currentTrackDuration);}}); this.model.audioTrackRemoved.attach(function(){if(self.started){var playlist=self.model.getPlaylist();var currentTrackIndex=self.model.getCurrentTrackIndex();self.view.renderPlaylist(playlist,currentTrackIndex);}}); this.model.currentTrackChanged.attach(function(){if(self.started){var playlist=self.model.getPlaylist();var currentTrackIndex=self.model.getCurrentTrackIndex();var currentTrackTitle=self.model.getCurrentTrackTitle();var currentTrackDuration=self.model.getCurrentTrackDuration();self.view.renderPlaylist(playlist,currentTrackIndex);self.view.setCurrentTrackData(currentTrackTitle,currentTrackDuration);}}); this.model.volumeChanged.attach(function(){if(self.started){self.view.setVolumeBar(self.model.getVolume());if(self.model.getMute()) self.view.addContainerClass('muted');else self.view.removeContainerClass('muted');}}); this.model.audioTrackPlaying.attach(function(){self.view.removeContainerClass('paused');self.view.addContainerClass('playing');}); this.model.audioTrackPaused.attach(function(){self.view.removeContainerClass('playing');self.view.addContainerClass('paused');}); this.model.audioTrackStopped.attach(function(){self.view.removeContainerClass('playing');self.view.removeContainerClass('paused');}); this.model.audioTrackEnded.attach(function(){var playlistEnded=self.model.nextTrack();if(playlistEnded&&!(self.playlistLoop))self.model.stop();else self.model.play();}); this.model.durationChanged.attach(function(){var currentTime=self.model.getCurrentTime();var duration=self.model.getCurrentTrackDuration();self.view.setProgressBar(currentTime,duration);self.view.setCurrentTime(currentTime);}); this.model.audioTrackError.attach(function(){self.model.setCurrentTrackError();self.nextTrack();}); this.view.playButtonClicked.attach(function(){if(self.model.audio.paused) self.model.play();else self.model.pause();}); this.view.stopButtonClicked.attach(function(){self.model.stop();}); this.view.fastForwardButtonPressed.attach(function(){setTimeout(function(){ if(self.view.mousedownFlag){self.mouseDown=setInterval(function(){if(self.view.mousedownFlag) self.model.fastForward();else{clearInterval(self.mouseDown);self.mouseDown=-1;}},500);} else self.nextTrack();},200);}); this.view.rewindButtonPressed.attach(function(){setTimeout(function(){ if(self.view.mousedownFlag){self.mouseDown=setInterval(function(){if(self.view.mousedownFlag) self.model.rewind();else{clearInterval(self.mouseDown);self.mouseDown=-1;}},500);} else self.previousTrack();},200);}); this.view.progressBarClicked.attach(function($sender,$args){var duration=self.model.getCurrentTrackDuration();var time=Math.floor(($args.offsetX/$args.width)*duration);self.model.setTime(time);}); this.view.volumeBarClicked.attach(function($sender,$args){var volume=$args.offsetX/$args.width;self.model.setVolume(volume);}); this.view.muteButtonClicked.attach(function($sender,$args){self.model.setMute();}); this.view.playlistElementDoubleClicked.attach(function($sender,$args){self.model.setAudioTrack($args.trackId);self.model.play();}); this.view.templateModified.attach(function(){if(self.started){var currentTrackTitle=self.model.getCurrentTrackTitle();var currentTrackDuration=self.model.getCurrentTrackDuration();var playlist=self.model.getPlaylist();var currentTrackIndex=self.model.getCurrentTrackIndex();self.view.renderPlayer();self.view.setCurrentTrackData(currentTrackTitle,currentTrackDuration);self.view.renderPlaylist(playlist,currentTrackIndex);}}); this.view.playlistPatternModified.attach(function(){if(self.started){var playlist=self.model.getPlaylist();var currentTrackIndex=self.model.getCurrentTrackIndex();self.view.renderPlaylist(playlist,currentTrackIndex);}});} WMPlayer.prototype={ addTrack:function($url,$title){if($title===undefined)$title='N/A';this.model.addAudioTrack($url,$title);}, removeTrack:function($index){this.model.delAudioTrack($index);}, track:function($index){if($index===undefined)$index=0;this.model.setAudioTrack($index);if(this.started)this.model.play();}, nextTrack:function(){var playing=this.model.isPlaying()||this.model.audio.ended;var playlistEnded=this.model.nextTrack();if(playlistEnded&&!(this.model.getLoop())) this.model.stop();else if(playing) this.model.play();}, previousTrack:function(){var playing=this.model.isPlaying();this.model.previousTrack();if(playing) this.model.play();}, volume:function($volume){this.model.setVolume($volume);}, mute:function($mute){this.model.setMute($mute);}, template:function($template){if($template===undefined) $template=false;if($template.length>0) $template=$template[0];this.view.setTemplate($template);}, playlistPattern:function($pattern){if($pattern!==undefined) this.view.setPlaylistPattern($pattern);}, parent:function($parent,$setAsTemplate){ if($parent===undefined) $parent=(document.currentScript||(function(){var scripts=document.getElementsByTagName("script");return scripts[scripts.length-1];})()).parentNode;else if($parent.length>0) $parent=$parent[0];this.parentNode=$parent;if($setAsTemplate==true){this.view.setTemplate($parent.innerHTML);$parent.innerHTML='';} if(this.started) this.parentNode.appendChild(this.container);}, loop:function($loop){this.model.setLoop($loop);}, autoplay:function($autoplay){this.model.setAutoplay($autoplay);}, controls:function($elements){this.view.setControls($elements);}, showPlaylist:function($show){this.view.setShowPlaylist($show);}, destroy:function(){if(this.container.parentNode==this.parentNode) this.parentNode.removeChild(this.container);this.started=false;}, start:function(){if(!this.started){this.started=true;this.parentNode.appendChild(this.container);var currentTrackTitle=this.model.getCurrentTrackTitle();var currentTrackDuration=this.model.getCurrentTrackDuration();var playlist=this.model.getPlaylist();var currentTrackIndex=this.model.getCurrentTrackIndex();var volume=this.model.getVolume();var mute=this.model.getMute();var autoplay=this.model.getAutoplay();this.view.renderPlayer();this.view.setProgressBar();this.view.setVolumeBar(volume);if(mute)this.view.addContainerClass('muted');this.view.setCurrentTrackData(currentTrackTitle,currentTrackDuration);this.view.renderPlaylist(playlist,currentTrackIndex);if(autoplay)this.model.play();else this.view.addContainerClass('paused');}}};function WMPlayerEvent($sender){this.sender=$sender;this.listeners=[];} WMPlayerEvent.prototype={attach:function($listener){this.listeners.push($listener);},notify:function($args){for(var i=0;i<this.listeners.length;i++){this.listeners[i](this.sender,$args);}}};function WMPlayerModel(){var self=this;this.audio=new Audio();this.playlist=[];this.currentTrackIndex=null;this.loop=false;this.autoplay=false;this.timeChangeRate=5;this.volume=1;this.mute=false;this.canPause=true; this.audioTrackAdded=new WMPlayerEvent(this);this.audioTrackRemoved=new WMPlayerEvent(this);this.currentTrackChanged=new WMPlayerEvent(this);this.audioTrackPlaying=new WMPlayerEvent(this);this.audioTrackPaused=new WMPlayerEvent(this);this.audioTrackStopped=new WMPlayerEvent(this);this.audioTrackEnded=new WMPlayerEvent(this);this.audioTrackError=new WMPlayerEvent(this);this.durationChanged=new WMPlayerEvent(this);this.volumeChanged=new WMPlayerEvent(this); this.audio.addEventListener('play',function(){self.audioTrackPlaying.notify();});this.audio.addEventListener('playing',function(){self.audioTrackPlaying.notify();});this.audio.addEventListener('pause',function(){self.audioTrackPaused.notify();});this.audio.addEventListener('ended',function(){self.audioTrackEnded.notify();});this.audio.addEventListener('error',function(){self.canPause=true;self.audioTrackError.notify();});this.audio.addEventListener('durationchange',function(){self.durationChanged.notify();});this.audio.addEventListener('timeupdate',function(){self.durationChanged.notify();});this.audio.addEventListener('volumechange',function(){self.volumeChanged.notify();});} WMPlayerModel.prototype={ getPlaylist:function(){return this.playlist;}, getCurrentTrackIndex:function(){return this.currentTrackIndex;}, getCurrentTrackTitle:function(){if(this.currentTrackIndex===null) return'';else return this.playlist[this.currentTrackIndex].title;}, getCurrentTrackDuration:function(){if(this.currentTrackIndex===null) return 0;var duration=this.playlist[this.currentTrackIndex].duration;if(isNaN(duration)) return 0;else return duration;}, getCurrentTime:function(){return this.audio.currentTime;}, getVolume:function(){return this.volume;}, getMute:function(){return this.mute;}, getAutoplay:function(){return this.autoplay;}, getLoop:function(){return this.loop;}, isPlaying:function(){return!(this.audio.paused);}, addAudioTrack:function($url,$title){if($title===undefined) $title='N/A';this.playlist.push({title:$title,url:$url,duration:'N/A',error:false});this.audioTrackAdded.notify();var self=this;var index=this.playlist.length-1;var audio=new Audio(); audio.onloadedmetadata=function($e){var i=0; if(self.playlist.length==0) return;while((!($e.target.src.indexOf(self.playlist[i].url)>=0||$e.target.src.indexOf(encodeURI(self.playlist[i].url))>=0)||self.playlist[i].duration!='N/A')&&i<self.playlist.length){i++;} if(!($e.target.src.indexOf(self.playlist[i].url)>=0||$e.target.src.indexOf(encodeURI(self.playlist[i].url)))) return;self.playlist[i].duration=audio.duration;self.audioTrackAdded.notify();};audio.src=self.playlist[index].url;audio.load();if(self.currentTrackIndex===null) self.setAudioTrack();}, delAudioTrack:function($index){if(this.playlist.length==0) return;if($index===undefined) $index=this.playlist.length-1;this.playlist.splice($index,1); if($index==this.currentTrackIndex){var playing=this.isPlaying();this.stop();if(this.playlist.length==0) this.setAudioTrack();else if(this.currentTrackIndex>=this.playlist.length) this.setAudioTrack($index-1);else this.setAudioTrack($index);if(playing) this.play();} else if($index<this.currentTrackIndex) this.currentTrackIndex--;this.audioTrackRemoved.notify();}, setAudioTrack:function($index){var self=this;if($index===undefined) $index=0;if(this.playlist.length>$index&&0<=$index){if(this.canPause){this.audio.src=this.playlist[$index].url;this.currentTrackIndex=$index;this.audio.load();this.currentTrackChanged.notify();} else{var interval=setInterval(function(){if(self.canPause||self.playlist[self.currentTrackIndex].error){self.canPause=true;self.audio.src=self.playlist[$index].url;self.currentTrackIndex=$index;self.audio.load();self.currentTrackChanged.notify();clearInterval(interval);}},10);}} else this.currentTrackIndex=null;}, setVolume:function($volume){if($volume===undefined) $volume=1;if($volume<0) $volume=0;else if($volume>1) $volume=1;this.volume=$volume;this.mute=false;this.audio.volume=this.volume;}, setMute:function($mute){if($mute===undefined) this.mute=!this.mute;else if($mute) this.mute=true;else this.mute=false;if(this.mute) this.audio.volume=0;else this.audio.volume=this.volume;}, setAutoplay:function($autoplay){if($autoplay===undefined) this.autoplay=!this.autoplay;else if($autoplay) this.autoplay=true;else this.autoplay=false;}, setLoop:function($loop){if($loop===undefined) this.loop=!this.loop;else if($loop) this.loop=true;else this.loop=false;}, setCurrentTrackError:function(){this.playlist[this.currentTrackIndex].error=true;}, play:function(){self=this;this.canPause=false;if(this.playlist.length==0) return;if(!(this.audio.src)||this.audio.src=='') this.setAudioTrack();var playPromise=this.audio.play();if(playPromise!==undefined&&typeof Promise!=='undefined'&&Promise.toString().indexOf('[native code]')!==-1){try{playPromise.then(function(){self.canPause=true;}).catch(function(){self.canPause=true;});} catch(error){self.canPause=true;}} else this.canPause=true;}, pause:function(){this.audio.pause();}, stop:function(){if(this.audio.src){this.audio.pause();try{this.audio.currentTime=0;} catch(e){} this.audioTrackStopped.notify();}}, nextTrack:function(){var playlistEnd=false;if(this.currentTrackIndex<this.playlist.length-1) this.setAudioTrack(this.currentTrackIndex+1);else{this.setAudioTrack();playlistEnd=true;} this.currentTrackChanged.notify();return playlistEnd;}, previousTrack:function(){if(this.currentTrackIndex>0){this.setAudioTrack(this.currentTrackIndex-1);} else this.setAudioTrack();this.currentTrackChanged.notify();}, setTime:function($time){if(this.audio.src) this.audio.currentTime=$time;}, fastForward:function(){var time=this.getCurrentTime()+this.timeChangeRate;if(time<this.audio.duration&&time>=0){if(this.audio.buffered.start(0)<=time&&this.audio.buffered.end(0)>=time) this.audio.currentTime=time;}}, rewind:function(){var time=this.getCurrentTime()-this.timeChangeRate;if(time<this.audio.duration&&time>=0) if(this.audio.buffered.start(0)<=time&&this.audio.buffered.end(0)>=time) this.audio.currentTime=time;}};function WMPlayerView($elements){var self=this;this.elements=$elements;this.template=null;this.playlistPattern='';this.container=this.elements.container;this.mousedownFlag=false;this.showPlaylist=true;this.dragged=false;this.mouseOnVolumeBar=false;this.mouseOnProgressBar=false; this.playButtonClicked=new WMPlayerEvent(this);this.stopButtonClicked=new WMPlayerEvent(this);this.fastForwardButtonPressed=new WMPlayerEvent(this);this.rewindButtonPressed=new WMPlayerEvent(this);this.progressBarClicked=new WMPlayerEvent(this);this.volumeBarClicked=new WMPlayerEvent(this);this.muteButtonClicked=new WMPlayerEvent(this);this.playlistElementDoubleClicked=new WMPlayerEvent(this);this.templateModified=new WMPlayerEvent(this);this.playlistPatternModified=new WMPlayerEvent(this);  this.container.addEventListener("click",function($e){ var targetParents=self.getParentsNodes($e.target,self.elements.container); if(self.isParent(targetParents,self.elements.playButton)) self.playButtonClicked.notify(); if(self.isParent(targetParents,self.elements.stopButton)) self.stopButtonClicked.notify(); var progressBarValue=self.isParent(targetParents,self.elements.progressBar,true);if(progressBarValue){var progressBarParent=progressBarValue.parentNode;var width=0;var rect=progressBarValue.getBoundingClientRect();var offsetX=$e.clientX-rect.left; if(progressBarParent.hasAttribute('width')) width=progressBarParent.getAttribute('width');else width=progressBarParent.offsetWidth;self.progressBarClicked.notify({offsetX:offsetX,width:width});} var volumeBarValue=self.isParent(targetParents,self.elements.volumeBar,true);if(volumeBarValue){var volumeBarWidth=volumeBarValue.parentNode;var width=0;var rect=volumeBarValue.getBoundingClientRect();var offsetX=$e.clientX-rect.left; if(volumeBarWidth.hasAttribute('width')) width=volumeBarWidth.getAttribute('width');else width=volumeBarWidth.offsetWidth;self.volumeBarClicked.notify({offsetX:offsetX,width:width});} if(self.isParent(targetParents,self.elements.muteButton)) self.muteButtonClicked.notify();}); var doubleClick=function($e){ var targetParents=self.getParentsNodes($e.target,self.elements.container); var playlistItem=self.isParent(targetParents,'wmp-playlist-item');if(playlistItem){var i=0;while((playlistItem=playlistItem.previousSibling)!==null) ++i;self.playlistElementDoubleClicked.notify({trackId:i});}}; var mouseDown=function($e){self.mouseOnVolumeBar=false;self.mouseOnProgressBar=false; var targetParents=self.getParentsNodes($e.target,self.elements.container); if(self.isParent(targetParents,self.elements.fastForwardButton)){self.mousedownFlag=true;self.fastForwardButtonPressed.notify();} if(self.isParent(targetParents,self.elements.rewindButton)){self.mousedownFlag=true;self.rewindButtonPressed.notify();} if(self.isParent(targetParents,self.elements.volumeBar,true)){self.mouseOnVolumeBar=true;} if(self.isParent(targetParents,self.elements.progressBar,true)){self.mouseOnProgressBar=true;}}; var touchstart=function($e){self.mouseOnVolumeBar=false;self.mouseOnProgressBar=false;self.dragged=false; var targetParents=self.getParentsNodes($e.target,self.elements.container); if(self.isParent(targetParents,self.elements.volumeBar,true)){self.mouseOnVolumeBar=true;} if(self.isParent(targetParents,self.elements.progressBar,true)){self.mouseOnProgressBar=true;}}; var mouseUp=function($e){self.mousedownFlag=false;self.mouseOnVolumeBar=false;self.mouseOnProgressBar=false;}; var mouseMove=function($e){ if($e.which==1||$e.touches!==undefined){ var targetParents=self.getParentsNodes($e.target,self.elements.container); var volumeBarValue=self.isParent(targetParents,self.elements.volumeBar,true);if(volumeBarValue&&self.mouseOnVolumeBar){var volumeBarWidth=volumeBarValue.parentNode;var width=0;var rect=volumeBarValue.getBoundingClientRect();var offsetX=($e.clientX||$e.touches[0].clientX)-rect.left; if(volumeBarWidth.hasAttribute('width')) width=volumeBarWidth.getAttribute('width');else width=volumeBarWidth.offsetWidth;self.volumeBarClicked.notify({offsetX:offsetX,width:width});} var progressBarValue=self.isParent(targetParents,self.elements.progressBar,true);if(progressBarValue&&self.mouseOnProgressBar){var progressBarParent=progressBarValue.parentNode;var width=0;var rect=progressBarValue.getBoundingClientRect();var offsetX=($e.clientX||$e.touches[0].clientX)-rect.left; if(progressBarParent.hasAttribute('width')) width=progressBarParent.getAttribute('width');else width=progressBarParent.offsetWidth;self.progressBarClicked.notify({offsetX:offsetX,width:width});}}}; this.container.addEventListener("dblclick",function($e){doubleClick($e);});this.container.addEventListener("touchstart",function($e){touchstart($e);});this.container.addEventListener("touchmove",function($e){this.dragged=true;mouseMove($e);});this.container.addEventListener("touchend",function($e){if(!this.dragged) doubleClick($e);this.dragged=false;});this.container.addEventListener("mousedown",function($e){mouseDown($e);});this.container.addEventListener("mouseup",function($e){mouseUp($e);});this.container.addEventListener("mousemove",function($e){mouseMove($e);});} WMPlayerView.prototype={ renderPlayer:function(){if(this.template!==null) this.elements.container.innerHTML=this.template;}, renderPlaylist:function($playlist,$currentTrackIndex){var list='';var status='';var playlists=this.elements.container.getElementsByClassName(this.elements.playlist);if(this.showPlaylist){if(playlists.length>0){for(var i=0;i<$playlist.length;i++){status='wmp-playlist-item';if(i==$currentTrackIndex) status+=' wmp-current';if($playlist[i].error) status+=' wmp-error';list=list+this.playlistPattern.replace('$index',(i+1)).replace('$title',$playlist[i].title).replace('$duration',this.formatTime($playlist[i].duration)).replace('$status',status);}}} for(i=0;playlists.length>i;i++){playlists[i].innerHTML=list;}}, setTemplate:function($template){if($template.nodeType===1) this.template=$template.innerHTML;else this.template=$template;this.templateModified.notify();}, setPlaylistPattern:function($pattern){this.playlistPattern=$pattern;this.playlistPatternModified.notify();}, setShowPlaylist:function($show){if($show===undefined) this.showPlaylist=!this.showPlaylist;else if($show==true) this.showPlaylist=true;else this.showPlaylist=false;this.playlistPatternModified.notify();}, setVolumeBar:function($volume){if($volume===undefined) $volume=0;var volumeBar=this.elements.container.getElementsByClassName(this.elements.volumeBar);for(var i=0;i<volumeBar.length;i++){volumeBar[i].style.width=$volume*100+'%';};}, setProgressBar:function($currentTime,$duration){var width=0;var progressBar=this.elements.container.getElementsByClassName(this.elements.progressBar);if($currentTime!==undefined&&$duration!==undefined) width=$currentTime/$duration*100;for(var i=0;i<progressBar.length;i++){progressBar[i].style.width=width+'%';}}, formatTime:function($time){var formatedTime="N/A";if(!isNaN($time)){var minutes=Math.floor($time/60);var seconds=Math.floor($time-(minutes*60));formatedTime=minutes+':'+((seconds<10?'0':'')+seconds);} return formatedTime;}, setCurrentTime:function($currentTime){var timers=this.elements.container.getElementsByClassName(this.elements.currentTrackTime);var currentTime=this.formatTime($currentTime);for(var i=0;i<timers.length;i++){timers[i].innerHTML=currentTime;};}, getParentsNodes:function($target,$toParent){var nodes=[];var element=$target;nodes.push(element);while(element.parentNode&&element!=$toParent){nodes.unshift(element.parentNode);element=element.parentNode;};return nodes;}, isParent:function($parents,$className,$child){if($parents.length>1){for(var i=0;i<$parents.length;i++){if($parents[i].classList!==undefined){if($parents[i].classList.contains($className)||(' '+$parents[i].getAttribute("class")+' ').indexOf(' '+$className+' ')>-1) return $parents[i];} else if((' '+$parents[i].getAttribute("class")+' ').indexOf(' '+$className+' ')>-1) return $parents[i];}} else{if($parents.classList.contains($className)||(' '+$parents.className+' ').indexOf(' '+$className+' ')>-1) return $parents;} if($child){var children=this.container.getElementsByClassName($className);for(var i=0;i<(children.length);i++){if(children[i].parentNode===$parents[$parents.length-1]) return children[i];}} return false;}, setCurrentTrackData:function($currentTrackTitle,$currentTrackDuration){var titles=this.elements.container.getElementsByClassName(this.elements.currentTrackTitle);var durations=this.elements.container.getElementsByClassName(this.elements.currentTrackDuration);for(var i=0;i<titles.length;i++){if(titles[i]!==null) titles[i].innerHTML=$currentTrackTitle;} var duration=this.formatTime($currentTrackDuration);for(var i=0;i<durations.length;i++){if(durations[i]!==null) durations[i].innerHTML=duration;}}, addContainerClass:function($newClassName){if(this.elements.container.classList!==undefined) this.elements.container.classList.add($newClassName);else this.elements.container.className+=' '+$newClassName;}, removeContainerClass:function($removedClassName){if(this.elements.container.classList!==undefined) this.elements.container.classList.remove($removedClassName);else{var elClass=' '+this.elements.container.className+' ';while(elClass.indexOf(' '+$removedClassName+' ')!==-1){elClass=elClass.replace(' '+$removedClassName+' ','');} this.elements.container.className=elClass.trim();}}, setControls:function($elements){if($elements.playlist!==undefined)this.elements.playlist=$elements.playlist;if($elements.playButton!==undefined)this.elements.playButton=$elements.playButton;if($elements.stopButton!==undefined)this.elements.stopButton=$elements.stopButton;if($elements.fastForwardButton!==undefined)this.elements.fastForwardButton=$elements.fastForwardButton;if($elements.rewindButton!==undefined)this.elements.rewindButton=$elements.rewindButton;if($elements.progressBar!==undefined)this.elements.progressBar=$elements.progressBar;if($elements.volumeBar!==undefined)this.elements.volumeBar=$elements.volumeBar;if($elements.muteButton!==undefined)this.elements.muteButton=$elements.muteButton;if($elements.currentTrackTime!==undefined)this.elements.currentTrackTime=$elements.currentTrackTime;if($elements.currentTrackDuration!==undefined)this.elements.currentTrackDuration=$elements.currentTrackDuration;if($elements.currentTrackTitle!==undefined)this.elements.currentTrackTitle=$elements.currentTrackTitle;}}; 